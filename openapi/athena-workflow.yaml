openapi: "3.0.0"
info:
  version: 1.0.0
  title: Athena Workflow API
  description: API which provides data processing workflow helpers
tags:
  - name: athena
    description: Athena workflow related operations
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: all
paths:
  /athena/run_s3_query_template:
    post:
      operationId: RunS3AthenaQueryTemplate
      description: Runs a query template which is loaded from S3 on Athena and returns the results
      tags:
        - athena
      requestBody:
        description: The parameters, s3 object and athena details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunS3AthenaQueryTemplateRequest'
      responses:
        '200':
          description: The query ran successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunAthenaQueryTemplateResponse'
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AthenaWorkflowApiFunction.Arn}:live/invocations'
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
      security:
        - sigv4: []
  /athena/run_query_template:
    post:
      operationId: RunAthenaQueryTemplate
      description: Runs a query template on Athena and returns the results
      tags:
        - athena
      requestBody:
        description: The parameters, template and athena details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAthenaQueryTemplateRequest'
      responses:
        '200':
          description: The query ran successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunAthenaQueryTemplateResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AthenaWorkflowApiFunction.Arn}:live/invocations'
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
      security:
        - sigv4: []
components:
  securitySchemes:
    sigv4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    RunS3AthenaQueryTemplateRequest:
      type: object
      required:
        - parameters
        - s3_query_template
      properties:
        parameters:
          type: object
        s3_query_template:
          type: object
          required:
            - bucket
            - key
          properties:
            bucket:
              type: string
            key:
              type: string
    RunAthenaQueryTemplateRequest:
      type: object
      required:
        - parameters
        - query
      properties:
        parameters:
          type: array
          description: ordered list of query parameters
          items:
            type: string
        query:
          type: string
    RunAthenaQueryTemplateResponse:
      type: object
      required:
        - query_execution_id
        - query_execution_state
        - result_path
      properties:
        query_execution_id:
          type: string
        query_execution_state:
          type: string
        result_path:
          type: string
    ErrorResponse:
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
