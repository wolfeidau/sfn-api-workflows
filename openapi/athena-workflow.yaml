openapi: "3.0.0"
info:
  version: 1.0.0
  title: Athena Workflow API
  description: API which provides data processing workflow helpers
tags:
  - name: athena
    description: Athena workflow related operations
x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
x-amazon-apigateway-request-validator: all
paths:
  /athena/run_s3_query_template:
    post:
      operationId: RunS3AthenaQueryTemplate
      description: Runs a query template which is loaded from S3 on Athena and returns the results
      tags:
        - athena
      requestBody:
        description: The parameters, s3 object and athena details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunS3AthenaQueryTemplateRequest'
      responses:
        '200':
          description: The query ran successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunAthenaQueryTemplateResponse'
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AthenaWorkflowApiFunction.Arn}:live/invocations'
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
      security:
        - sigv4: []
  /athena/run_query_template:
    post:
      operationId: RunAthenaQueryTemplate
      description: Uses a Go template to build and run a query on Athena and returns the results, this can block and wait for the query to complete, or return the query ID and the caller can poll for the status
      tags:
        - athena
      requestBody:
        description: The parameters, template and athena details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunAthenaQueryTemplateRequest'
      responses:
        '200':
          description: The query ran successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunAthenaQueryTemplateResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: Bad Gateway, Athena return a status other than successfully so it failed to run the query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunAthenaQueryTemplateResponse'
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AthenaWorkflowApiFunction.Arn}:live/invocations'
        httpMethod: POST
        type: aws_proxy
        passthroughBehavior: never
      security:
        - sigv4: []
components:
  securitySchemes:
    sigv4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    RunS3AthenaQueryTemplateRequest:
      type: object
      required:
        - template
      properties:
        query:
          type: object
          properties:
            parameters:
              type: array
              description: ordered list of query parameters
              items:
                type: string
        template:
          type: object
          required:
            - s3_query_file
          properties:
            parameters:
              type: object
            s3_query_file:
              type: object
              required:
                - bucket
                - key
              properties:
                bucket:
                  type: string
                key:
                  type: string
    RunAthenaQueryTemplateRequest:
      type: object
      required:
        - template_query
        - wait_for_completion
      properties:
        query:
          type: object
          description: Athena query parameters which are passed as is to the Athena API
          properties:
            parameters:
              type: array
              description: ordered list of query parameters
              items:
                type: string
        template_query:
          description: Athena query template using Go template syntax
          type: string
        template_data:
          description: Data to be passed to the Go template
          type: object
        wait_for_completion:
          description: If true the operation will wait for the query to complete before returning the results
          type: boolean
    RunAthenaQueryTemplateResponse:
      type: object
      required:
        - query_execution_id
      properties:
        query_execution_id:
          type: string
        query_execution_state:
          type: string
        result_path:
          type: string
    ErrorResponse:
      required:
        - message
      properties:
        message:
          type: string
          description: Error message
